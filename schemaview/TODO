* Make the cells shaped differently for different types of nodes (rounded
  corners etc.).

* Create an icon for the choice and sequence nodes so they look more like
  XMLSpy

* Update the parser to support further development.
    * Parser should catch errors in schema
    * Parser should provide retrieval of info for schema items that can be
      referenced (complexTypes, simpleTypes, groups, etc.).
    
* Allow the display of more information for each cell such as documentation and
  attributes etc.

* Allow collapsing of the schema tree.
    * May require editing how the JGraph renders the model.

* Size each cell based on the size of the text within it.

* Look at Edge.Routing to try to orthoganal lines connecting nodes.

* Maybe add a panel that displays the schema roots and allows you to choose one
  to display like in XMLSpy.

* Explore key, unique, keyref, annotation, list, restriction, list, and union
  elements. How should they be displayed?

* Show attributes that the type can have.

* Build into the schema tree inherited or referenced attributes from other
  types. Show a box around the attributes like XMLSpy.

* Begin to build in the editing features.
    * Override insert and remove methods in SchemaViewGraphModel to catch
      insert and remove events so they can be passed to the Tree model.
    * Add a context menu that pops up when right clicking on nodes to allow you
      to add and remove nodes from the schema tree.
