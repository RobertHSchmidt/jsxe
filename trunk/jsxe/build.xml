<?xml version="1.0" encoding="UTF-8"?>
<!--
     This is a build.xml file for building jsXe.
-->
<project basedir="." default="usage" name="jsXe">
	
  <description>jsXe - Java Simple XML Editor</description>
  
  <!-- {{{ ============ Initializes properties and variables ============= -->
	<target name="init">
		<tstamp/>
		<property name="app.name" value="jsXe"/>
		<property name="root.dir" value="."/>
    <property name="build.dir" value="${root.dir}/build"/>
		<property name="src.dir" value="${root.dir}/src"/>
		<property name="lib.dir" value="${root.dir}/lib"/>
		<property name="bin.dir" value="${root.dir}/bin"/>
		<property name="docs.dir" value="${src.dir}/doc"/>
		<property name="build.src" value="${build.dir}/src"/>
		<property name="build.dest" value="${build.dir}/classes"/>
		<property name="build.docs" value="${build.dir}/doc"/>
		<property name="build.lib" value="${build.dir}/lib"/>
		<property name="build.bin" value="${build.dir}/bin"/>
		<property name="build.bin" value="${build.dir}/bin"/>
		<property name="build.javadocs" value="${build.docs}/api"/>
		<property name="build.help" value="${build.docs}/help"/>
		<property name="javac.debug" value="on"/>
		<property name="javac.optimize" value="off"/>
		<property name="javac.deprecation" value="on"/>
    <property name="javac.include.runtime" value="no"/>
    <property name="javac.source" value="1.3"/>
		<property name="javadoc.link" value="http://java.sun.com/j2se/1.3/docs/api/"/>
    <property name="main.class" value="net.sourceforge.jsxe.jsXe"/>
		<property name="major.version" value="0"/>
		<property name="minor.version" value="3"/>
		<property name="build.description" value="pre4"/>
		<property name="app.version" value="${major.version}.${minor.version} ${build.description}"/>
		<property name="app_version" value="${major.version}_${minor.version}${build.description}"/>
		<property name="distbin.dir" value="${build.dir}/${app.name}-${app_version}-bin"/>
		<property name="distsrc.dir" value="${build.dir}/${app.name}-${app_version}-src"/>
		<path id="classpath">
			<pathelement location="."/>
			<pathelement location="${build.dest}"/>
			<pathelement location="${build.src}"/>
			<pathelement location="${src.dir}"/>
			<fileset dir="${lib.dir}">
				<include name="**/*.jar"/>
			</fileset>
		</path>
		<echo message="${app.name} ${app.version}"/>
		<echo message="----------------------------------------------------------"/>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Prints the available targets ===================== -->
	<target depends="init" name="usage" description="Prints available targets">
		<echo message=" available targets are:"/>
		<echo message=""/>
		<echo message=" compile   --&gt; generates the ${app.name}.jar file"/>
		<echo message=" bin       --&gt; generates a binary distribution"/>
		<echo message=" src       --&gt; generates a source distribution"/>
		<echo message=" doc       --&gt; generates all documentation"/>
		<echo message=" clean     --&gt; cleans everything up"/>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Prepares for any type of build =================== -->
	<target depends="init" name="prepare">
		<mkdir dir="${build.dir}"/>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Prepares the documentation ======================= -->
	<target depends="prepare" name="prepare-doc">
		<mkdir dir="${build.docs}"/>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Prepares the source distribution ================= -->
	<target depends="prepare" name="prepare-src">
		<mkdir dir="${build.src}"/>
		<copy todir="${build.src}">
			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
				<include name="**/*.props"/>
				<include name="**/*.properties"/>
				<include name="**/properties"/>
				<include name="**/*.jpg"/>
				<include name="**/*.png"/>
			</fileset>
		</copy>
    <copy todir="${build.src}">
      <fileset dir="${root.dir}">
        <include name="build.xml"/>
        <include name="${app.name}.manifest"/>
      </fileset>
    </copy>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Compiles the program ============================= -->
	<target depends="prepare-src" name="compile" description="compile jsXe">
		<mkdir dir="${build.dest}"/>
		<javac debug="${javac.debug}" deprecation="${javac.deprecation}" includeJavaRuntime="${javac.include.runtime}" optimize="${javac.optimize}" source="${javac.source}" destdir="${build.dest}" srcdir="${build.src}">
			<classpath refid="classpath"/>
			<include name="**/*.java"/>
		</javac>
		<copy todir="${build.dest}">
			<fileset dir="${build.src}">
				<include name="**/*.props"/>
				<include name="**/*.properties"/>
				<include name="**/properties"/>
				<include name="**/*.jpg"/>
				<include name="**/*.png"/>
			</fileset>
		</copy>
		
    <!-- set the build properties -->
    <propertyfile comment="${app.name}&apos;s build properties" file="${build.dest}/net/sourceforge/jsxe/build.properties">
			<entry key="application.name" value="${app.name}"/>
			<entry key="build.time" pattern="dd/MM/yyyy HH:mm" type="date" value="now"/>
			<entry key="major.version" value="${major.version}"/>
			<entry key="minor.version" value="${minor.version}"/>
			<entry key="build.description" value="${build.description}"/>
		</propertyfile>
    
    <!-- create jar manifest -->
    <manifest file="${app.name}.manifest">
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Main-Class" value="${main.class}"/>
      <section name="common">
        <attribute name="Implementation-Title" value="${app.name}"/>
        <attribute name="Implementation-Version" value="${app.version} ${TODAY}"/>
      </section>
    </manifest>
    
		<jar jarfile="${app.name}.jar" manifest="${app.name}.manifest">
			<fileset dir="${build.dest}">
				<include name="**/*.class"/>
				<include name="**/properties"/>
				<include name="**/*.props"/>
				<include name="**/*.properties"/>
				<include name="**/*.jpg"/>
				<include name="**/*.png"/>
			</fileset>
		</jar>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Prepares for a build ============================= -->
	<target depends="init" name="prepare-build">
		<!-- lib -->
		<mkdir dir="${build.dir}/lib"/>
		<copy todir="${build.dir}/lib">
			<fileset dir="${lib.dir}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<!-- bin -->
		<mkdir dir="${build.dir}/bin"/>
		<copy todir="${build.dir}/bin">
			<fileset dir="${bin.dir}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Generates the documentation ====================== -->
	<target depends="prepare-doc, prepare-src" name="doc">
		<copy file="COPYING" tofile="${build.dir}/doc/COPYING"/>
		<copy file="README" tofile="${build.dir}/doc/README"/>
		<copy file="TODO" tofile="${build.dir}/doc/TODO"/>
		<copy file="ISSUES" tofile="${build.dir}/doc/ISSUES"/>
		<copy file="Changelog" tofile="${build.dir}/doc/Changelog"/>
		<copy file="INSTALL" tofile="${build.dir}/doc/INSTALL"/>
		<copy file="THANKS" tofile="${build.dir}/doc/THANKS"/>
		<copy file="NEWS" tofile="${build.dir}/doc/NEWS"/>
		<javadoc author="true" destdir="${build.javadocs}" doctitle="${app.name} ${app.version} API" link="${javadoc.link}" locale="en_US" packagenames="*" sourcepath="${build.src}" version="true" windowtitle="${app.name} ${app.version} API"/>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Generates the binary distribution ================ -->
	<target depends="compile, prepare-build, doc" name="bin" description="Build binary distribution">
		
    <!-- compile default views -->
    <ant inheritAll="false" dir="../treeview/" target="compile"/>
    <copy file="../treeview/treeview.jar" tofile="${distbin.dir}/plugins/treeview.jar"/>
    
    <!-- doc -->
		<mkdir dir="${distbin.dir}/doc"/>
		<copy todir="${distbin.dir}/doc">
			<fileset dir="${build.docs}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<!-- bin -->
		<mkdir dir="${distbin.dir}/bin"/>
		<copy todir="${distbin.dir}/bin">
			<fileset dir="${build.bin}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy file="${app.name}.jar" tofile="${distbin.dir}/${app.name}.jar"/>
		<zip basedir="${build.dir}" excludes="*.class" includes="${app.name}-${app_version}-bin/**" zipfile="${build.dir}/${app.name}-${app_version}-bin-noLibs.zip"/>
		<!-- lib -->
		<mkdir dir="${distbin.dir}/lib"/>
		<copy todir="${distbin.dir}/lib">
			<fileset dir="${build.lib}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<zip basedir="${build.dir}" excludes="*.class" includes="${app.name}-${app_version}-bin/**" zipfile="${build.dir}/${app.name}-${app_version}-bin.zip"/>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Generates the source distribution ================ -->
	<target depends="prepare-build, prepare-src, doc" name="src" description="Build source distribution">
		<!-- doc -->
		<mkdir dir="${distsrc.dir}/doc"/>
		<copy todir="${distsrc.dir}/doc">
			<fileset dir="${build.docs}">
				<include name="**/*"/>
			</fileset>
		</copy>
    <!-- build files -->
    <copy todir="${distsrc.dir}">
      <fileset dir="${build.src}">
        <include name="build.xml"/>
        <include name="${app.name}.manifest"/>
      </fileset>
    </copy>
		<!-- bin -->
		<mkdir dir="${distsrc.dir}/bin"/>
		<copy todir="${distsrc.dir}/bin">
			<fileset dir="${build.bin}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<!-- src -->
		<mkdir dir="${distsrc.dir}/src"/>
		<copy todir="${distsrc.dir}/src">
			<fileset dir="${build.src}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<zip basedir="${build.dir}" excludes="*.class" includes="${app.name}-${app_version}-src/**" zipfile="${build.dir}/${app.name}-${app_version}-src-noLibs.zip"/>
		<!-- lib -->
		<mkdir dir="${distsrc.dir}/lib"/>
		<copy todir="${distsrc.dir}/lib">
			<fileset dir="${build.lib}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<zip basedir="${build.dir}" excludes="*.class" includes="${app.name}-${app_version}-src/**" zipfile="${build.dir}/${app.name}-${app_version}-src.zip"/>
	</target>
	<!-- }}} -->
	<!-- {{{ ============ Cleans everything up ============================= -->
	<target depends="init" name="clean" description="Clean up distribution tree">
		<delete dir="${build.dir}"/>
		<delete>
			<fileset dir="." includes="${app.name}.jar"/>
      <fileset dir="." includes="${app.name}.manifest"/>
			<fileset dir="." includes="**/*.class"/>
			<fileset defaultexcludes="no" dir="." includes="**/*~"/>
			<fileset defaultexcludes="no" dir="." includes="**/#*#"/>
			<fileset dir="." includes="**/*.rej"/>
			<fileset dir="." includes="**/*.orig"/>
			<fileset dir="." includes="**/.*.swp"/>
			<fileset dir="." includes="**/.#*"/>
			<fileset dir="." includes="**/.new*"/>
			<fileset dir="." includes="**/.directory"/>
			<fileset dir="." includes="**/.xvpics"/>
		</delete>
	</target>
	<!-- }}} -->
</project>
